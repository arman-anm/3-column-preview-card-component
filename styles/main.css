/* External Resources */
@import url('https://fonts.googleapis.com/css2?family=Lexend+Deca&display=swap');
/* font-family: 'Lexend Deca', sans-serif; */

@import url('https://fonts.googleapis.com/css2?family=Big+Shoulders+Display:wght@700&display=swap');
/* font-family: 'Big Shoulders Display', cursive; */

/* Variables */
:root{
  font-size: 10px;
  --color-brightOrange : #e38826;
  --color-darkCyan : #006970;
  --color-veryDarkCyan : #004241;
  --color-transparentWhite : #ffffffbf;
  --color-lightGray : #f2f2f2;
  --padding-default : 25px;
  --margin-default : 25px;
}

body {
  background-color: var(--color-lightGray);
}

main {
  display: flex; /* Applies flexbox property to it's child, ie, wrapper of cards */
  min-height: 95vh; /* Without the height property flex can't center a element horizontally */
  justify-content: center;  /* centers the wrapper of cards vertically  */
  align-items: center;  /* centers the wrapper of cards horizontally */
}

.wrapper-cards {
  max-width: 100%;  /* Takes maximally the full width of it's parent element. In this case its the <main> container */
  display: flex;  /* Applies flex to it's child elements. ie, three cards  */
  flex-direction: row;
  flex-wrap: wrap;
  flex-shrink: 0;  /* So that it doesn't shrink */
  flex-grow: 1;  /* Allows growth if needed */
  flex-basis: auto;
  justify-content: center;  /* Centers child cards vertically to it's parent element */
  align-items: stretch; /* Items are stretched to fit the container in the y-axis */
  min-height: 50vh;  /* Just an arbitary number to match the given design */
  padding: var(--padding-default);
}

.wrapper-cards>* {
  padding: calc(var(--padding-default) * 2);
  /* Applies padding to all the child elements. ie, all cards  */
}

.wrapper-cards>:first-child {
  border-radius: 5px 5px 0 0; /* Applies border radius to top left and top right corner of the first card (mobile view)  */
}
.wrapper-cards>:last-child {
  border-radius: 0 0 5px 5px; /* Applies border radius to bottom left and bottom right corner of the last card (mobile view) */
}

.card-sedan {
  background-color: var(--color-brightOrange);
}

.card-suv {
  background-color: var(--color-darkCyan);
}

.card-luxury {
  background-color: var(--color-veryDarkCyan);
}

.icon {
  max-width: 55px;
  margin: 0;
}

.heading {
  font-family: 'Big Shoulders Display', cursive;
  font-size: 3.5rem;
  font-weight: 700;
  text-transform: uppercase;
  color: var(--color-lightGray);
  margin-top: var(--margin-default);
}

.description {
  font-family: 'Lexend Deca', sans-serif;
  font-size: 1.5rem;
  font-weight: 400;
  color: var(--color-transparentWhite);
  margin-top: var(--margin-default);
}

.button {
  display: inline-block;  /* <a> tags are inline elements, applying inline block property would make it possible to add padding/margin to it  */
  padding: 10px 30px;
  background-color: var(--color-lightGray);
  font-family: 'Lexend Deca', sans-serif;
  font-size: 1.35rem;
  font-weight: 400;
  text-decoration: none;  /* Removes all decorations i.e, color, underline from the button text. */
  border-radius: 50px;
  margin-top: var(--margin-default);
  border: 2px solid var(--color-lightGray); /* Border added to style the hover effect */
}

.card-sedan .button {
  color: var(--color-brightOrange);
}

.card-suv .button {
  color: var(--color-darkCyan);
}

.card-luxury .button {
  color: var(--color-veryDarkCyan);
}

.button:hover {
  color: var(--color-lightGray);
  background-color: inherit;
}

.attribution { 
  font-size: 11px; 
  text-align: center; 
  font-family: 'Lexend Deca', sans-serif;
  margin-bottom: var(--margin-default);
}

.attribution a { 
  color: #3e52a3; 
}

/* Media Query */
@media screen and (min-width: 1025px) {

  .wrapper-cards>* {
  width: 275px; /*A random number to look visually similar to the design */
  }
  
  .button {
    margin-top: calc(var(--margin-default) * 2);  /* Adds more margin to the top of the button to give it a breathing space  */
  }

  .wrapper-cards>:first-child {
    border-radius: 5px 0 0 5px; 
    /* Applies border radius to top left and bottom left corner of the first card (pc view)  */
  }
  .wrapper-cards>:last-child {
    border-radius: 0 5px 5px 0; 
    /* Applies border radius to top right and bottom right corner of the last card (pc view) */
  }

}